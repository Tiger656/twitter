{"version":3,"file":"create-post.dto.js","sourceRoot":"","sources":["../../../src/post/create-post.dto.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6CAA8C;AAI9C,MAAa,aAAa;CAezB;AAXC;IAAC,IAAA,qBAAW,EAAC;QACX,OAAO,EAAE,2BAA2B;QACpC,WAAW,EAAE,gDAAgD;KAC9D,CAAC;;kDACkB;AAEpB;IAAC,IAAA,qBAAW,EAAC;QACX,OAAO,EAAE,YAAY;QACrB,WAAW,EAAE,sFAAsF;KACpG,CAAC;;6CAC2B;AAd/B,sCAeC","sourcesContent":["import { ApiProperty } from \"@nestjs/swagger\";\nimport { Types } from \"mongoose\";\n\n\nexport class CreatePostDto {\n\n  _id: string;\n\n  @ApiProperty({\n    example: 'This is post text content',\n    description: 'poste text content. No longer than 200 symbols',\n  })\n  textContent: string;\n\n  @ApiProperty({\n    example: 'No example',\n    description: 'Author(user) id. This field anyway will be overwritten in system by User id from jwt',\n  })\n  author: Types.ObjectId | any;\n}\n\n// export const createPostDtoVaidator = z.object({\n//   textContent: z.string().max(200),\n//   authorId: z.string().uuid(),\n// });\n\n//export const uuidValidator = z.coerce.string().uuid();\n"]}