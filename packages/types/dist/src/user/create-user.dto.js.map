{"version":3,"file":"create-user.dto.js","sourceRoot":"","sources":["../../../src/user/create-user.dto.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6CAA8C;AAM9C,MAAa,aAAa;CAyBzB;AAvBC;IAAC,IAAA,qBAAW,EAAC;QACX,OAAO,EAAE,cAAc;QACvB,WAAW,EAAE,kBAAkB;KAChC,CAAC;;+CAIe;AAEjB;IAAC,IAAA,qBAAW,EAAC;QACX,OAAO,EAAE,WAAW;QACpB,WAAW,EAAE,kBAAkB;KAChC,CAAC;;+CACe;AAEjB;IAAC,IAAA,qBAAW,EAAC;QAEX,OAAO,EAAE,CAAC,OAAO,EAAE,cAAc,CAAC;QAClC,WAAW,EAAE,YAAY;QACzB,OAAO,EAAE,IAAI;QACb,IAAI,EAAE,MAAM;KACb,CAAC;;4CACe;AAxBnB,sCAyBC","sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\n//import { allowedRoles } from 'src/auth/acl';\n// import { MaxLength } from 'src/validator/validator.decorator';\n//import { z } from 'zod';\n\n// @Validateable() ..- должен подписываться \nexport class CreateUserDto {\n\n  @ApiProperty({\n    example: 'AlexFeller23',\n    description: 'Username of user',\n  })\n  //@MaxLength(10)\n  //@MaxLengthh()\n  // @MaxLength(1)\n  username: string;\n\n  @ApiProperty({\n    example: 'qwerty123',\n    description: 'Username of user',\n  })\n  password: string;\n\n  @ApiProperty({\n    // eslint-disable-next-line prettier/prettier\n    example: [\"admin\", \"regular_user\"],\n    description: 'User roles',\n    isArray: true,\n    type: String,\n  })\n  roles?: string[];\n}\n\n// export const createUserDtoValidator = z.object({\n//   username: z.string().min(7).max(50),\n//   password: z.string().min(8).min(20),\n//   roles: z.string().refine((roles) => {\n//     for (const role of roles) {\n//       if (!allowedRoles[role]) {\n//         return false;\n//       }\n//     }\n//   }, 'wrong roles have been passed'),\n// });\n\n//export const uuidValidator = z.coerce.string().uuid();\n"]}